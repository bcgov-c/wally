apiVersion: v1
parameters:
- name: NAME
  displayName: Name
  description: The name (environment) assigned to all of the resources defined in this template.
  required: true
  value: test
- name: HOST
  displayName: Host
  description: The hostname to deploy this template to.
  required: true
  value: wally-staging.apps.silver.devops.gov.bc.ca
- name: NAMESPACE
  displayName: Namespace
  description: The namespace to apply this template to.
  required: true
  value: d1b5d2-test
- name: ENVIRONMENT
  displayName: Environment
  description: The environment that these template objects will run in (e.g. dev, test, prod)
  value: TEST
  required: true
- name: WALLY_VERSION
  displayName: Wally Application Version
  description: Version
  value: 1.0.0
- name: WALLY_BUILD
  displayName: Wally Build Info
  description: Build Info
  value: "YYYY-MM-DD-HH:MM:SS-ID"
- name: API_VERSION
  displayName: Wally API Version
  description: API Version
  value: "1"
- name: REPLICAS
  value: "1"
objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: wally-${NAME}
      env: ${NAME}
      component: api
      name: wally-${NAME}-api
    name: wally-${NAME}-api
  spec:
    replicas: ${{REPLICAS}}
    revisionHistoryLimit: 10
    selector:
      app: wally-${NAME}
      env: ${NAME}
      component: api
      name: wally-${NAME}-api
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 1800
        updatePeriodSeconds: 1
        pre:
          failurePolicy: Abort
          execNewPod:
            command:
              - "/bin/bash"
              - "-c"
              - "/app/prestart.sh"
            containerName: wally-${NAME}-api
            env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: app-db-username
                  name: wally-psql
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: app-db-password
                  name: wally-psql
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  key: app-db-name
                  name: wally-psql
            - name: POSTGRES_SERVER
              value: wally-psql-${NAME}
            - name: WALLY_ENV
              value: "${ENVIRONMENT}"
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
          prometheus.io/scrape: 'true'
          prometheus.io/port: '8000'
          prometheus.io/path: '/metrics'
        labels:
            app: wally-${NAME}
            env: ${NAME}
            component: api
            name: wally-${NAME}-api
      spec:
        containers:
        - env:
          - name: COMMON_DOCGEN_CLIENT_ID
            valueFrom:
              secretKeyRef:
                key: COMMON_DOCGEN_CLIENT_ID
                name: common-docgen
          - name: COMMON_DOCGEN_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                key: COMMON_DOCGEN_CLIENT_SECRET
                name: common-docgen
          - name: COMMON_DOCGEN_SSO_ENDPOINT
            valueFrom:
              secretKeyRef:
                key: COMMON_DOCGEN_SSO_ENDPOINT
                name: common-docgen
          - name: COMMON_DOCGEN_ENDPOINT
            valueFrom:
              secretKeyRef:
                key: COMMON_DOCGEN_ENDPOINT
                name: common-docgen
          - name: MAPBOX_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                key: MAPBOX_ACCESS_TOKEN
                name: mapbox-access-token
          - name: MAPBOX_STYLE
            valueFrom:
              secretKeyRef:
                key: MAPBOX_STYLE
                name: mapbox-access-token
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                key: app-db-username
                name: wally-psql
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                key: app-db-password
                name: wally-psql
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                key: app-db-name
                name: wally-psql
          - name: MINIO_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: minioAccessKey
                name: minio
          - name: MINIO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                key: minioSecretKey
                name: minio
          - name: MINIO_HOST_URL
            value: "wally-minio-${NAME}:9000"
          - name: WATERSHED_DEBUG
            valueFrom:
              secretKeyRef:
                key: WATERSHED_DEBUG
                name: wally-debug
          - name: POSTGRES_SERVER
            value: wally-psql-${NAME}
          - name: WALLY_ENV
            value: "${ENVIRONMENT}"
          - name: WALLY_VERSION
            value: "${WALLY_VERSION}"
          - name: WALLY_BUILD
            value: "${WALLY_BUILD}"
          - name: API_VERSION
            value: "${API_VERSION}"
          - name: GDAL_DATA
            value: "/usr/share/gdal/"
          - name: AUTH_WELL_KNOWN_ENDPOINT
            valueFrom:
              secretKeyRef:
                key: AUTH_WELL_KNOWN_ENDPOINT
                name: wally-api-keycloak
          - name: AUTH_CLIENT
            valueFrom:
              secretKeyRef:
                key: AUTH_CLIENT
                name: wally-api-keycloak
          image: image-registry.openshift-image-registry.svc:5000/${NAMESPACE}/wally-api:${NAME}
          imagePullPolicy: Always
          name: wally-${NAME}-api
          ports:
          - containerPort: 8000
            protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              cpu: '1'
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          volumeMounts:
          - name: logging
            mountPath: /app/.log/
          - name: wally-config
            mountPath: /app/.config/
        - name: promtail
          image: image-registry.openshift-image-registry.svc:5000/d1b5d2-tools/promtail:v1.3.0
          args:
          - -config.file=/etc/promtail/promtail.yaml
          - -client.url=http://loki:3100/api/prom/push
          - -client.external-labels=pod=$(PODNAME)
          env:
            - name: PODNAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          volumeMounts:
          - name: logging
            mountPath: /app/.log/
          - name: promtail-config
            mountPath: /etc/promtail
          ports:
          - containerPort: 3111
            protocol: TCP
        volumes:
        - name: logging
          emptyDir: {}
        - name: promtail-config
          configMap:
            name: promtail-config
        - name: wally-config
          configMap:
            name: wally-config
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - wally-${NAME}-api
        from:
          kind: ImageStreamTag
          name: wally-api:${NAME}
          namespace: ${NAMESPACE}
      type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: wally-${NAME}
      env: ${NAME}
      component: api
      name: wally-${NAME}-api
    name: wally-${NAME}-api
  spec:
    ports:
    - name: 8000-tcp
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app: wally-${NAME}
      env: ${NAME}
      component: api
      name: wally-${NAME}-api
    sessionAffinity: None
    type: ClusterIP
kind: Template
metadata:
  labels:
    app: wally-${NAME}
    env: ${NAME}
    component: api
    name: wally-${NAME}-api
