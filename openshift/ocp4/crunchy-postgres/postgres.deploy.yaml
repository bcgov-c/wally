apiVersion: v1
kind: Template
labels:
  app: wally${NAME_SUFFIX}
  component: database
  name: ${DATABASE_SERVICE_NAME}
metadata:
  name: wally-postgresql-dc
parameters:
  - description: The OpenShift ImageStream name.
    displayName: IMAGE_STREAM_NAME
    name: IMAGE_STREAM_NAME
    value: crunchy-postgres-gis
  - description: The OpenShift Namespace where the ImageStream resides.
    displayName: Namespace
    name: IMAGE_STREAM_NAMESPACE
    value: d1b5d2-tools
  - description: The image registry for the container image or ImageStream.
    displayName: Image Registry
    name: IMAGE_REGISTRY
    value: image-registry.openshift-image-registry.svc:5000
  - description: The name of the OpenShift Service exposed for the database.
    displayName: Database Service Name
    name: DATABASE_SERVICE_NAME
    required: true
    value: postgresql
  - description: Username for PostgreSQL user that will be used for accessing the database.
    displayName: PostgreSQL Connection Username
    value: wally
    name: POSTGRESQL_USER
    required: true
  - description: Password for the PostgreSQL connection user.
    displayName: PostgreSQL Connection Password
    from: "[a-zA-Z0-9]{16}"
    generate: expression
    name: POSTGRESQL_PASSWORD
    required: true
  - description: Name of the PostgreSQL database accessed.
    displayName: PostgreSQL Database Name
    name: POSTGRESQL_DATABASE
    required: true
    value: sampledb
  - description: Volume space available for data, e.g. 512Mi, 2Gi.
    displayName: Volume Capacity
    name: VOLUME_CAPACITY
    required: true
    value: 1Gi
  - description: Request for CPU resources measured in cpu units, e.g. 200m
    displayName: CPU resource request
    name: REQUEST_CPU
    required: false
    value: 100m
  - description: Request for memory resources measured in bytes, e.g. 512Mi, 1Gi.
    displayName: Memory resource request
    name: REQUEST_MEMORY
    required: false
    value: 512Mi
  - description: Limit for CPU resources measured in cpu units, e.g. 200m
    displayName: CPU resource limit
    name: LIMIT_CPU
    required: false
    value: 200m
  - description: Limit for memory resources measured in bytes, e.g. 512Mi, 1Gi.
    displayName: Memory resource limit
    name: LIMIT_MEMORY
    required: false
    value: 1Gi
  - description: Version of PostgreSQL image to be used
    displayName: Version of PostgreSQL Image
    name: IMAGE_STREAM_VERSION
    required: true
    value: centos8-13.2-3.0-4.6.2
  - name: NAME_SUFFIX
    required: true
  - description: Storage class for PVCs.
    displayName: Storage class for PVCs.
    name: STORAGE_CLASS
    value: netapp-file-standard
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
      name: ${DATABASE_SERVICE_NAME}
    spec:
      ports:
        - name: postgresql
          nodePort: 0
          port: 5432
          protocol: TCP
          targetPort: 5432
      selector:
        name: ${DATABASE_SERVICE_NAME}
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${DATABASE_SERVICE_NAME}
      annotations:
        template.openshift.io.bcgov/create: "true"
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
      storageClassName: ${STORAGE_CLASS}
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${DATABASE_SERVICE_NAME}
    spec:
      replicas: 1
      selector:
        name: ${DATABASE_SERVICE_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            name: ${DATABASE_SERVICE_NAME}
            appver: wally${NAME_SUFFIX}
        spec:
          containers:
            - capabilities: {}
              env:
                - name: MODE
                  value: postgres
                - name: PG_MODE
                  value: primary
                - name: PG_PRIMARY_PORT
                  value: "5432"
                - name: CONTAINER_NAME
                  value: postgresql
                - name: PG_PRIMARY_HOST
                  value: ${DATABASE_SERVICE_NAME}
                - name: PGDATA_PATH_OVERRIDE
                  value: userdata
                - name: PGHOST
                  value: /tmp
                - name: TEMP_BUFFERS
                  value: 9MB
                - name: MAX_CONNECTIONS
                  value: "101"
                - name: SHARED_BUFFERS
                  value: 129MB
                - name: MAX_WAL_SENDERS
                  value: "7"
                - name: WORK_MEM
                  value: 5MB
                - name: PG_ROOT_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: superuser-password
                      name: wally-psql
                - name: PG_PRIMARY_USER
                  valueFrom:
                    secretKeyRef:
                      key: primaryuser-username
                      name: wally-psql
                - name: PG_PRIMARY_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: primaryuser-password
                      name: wally-psql
                - name: PG_USER
                  valueFrom:
                    secretKeyRef:
                      key: app-db-username
                      name: wally-psql
                - name: PG_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: app-db-password
                      name: wally-psql
                - name: PG_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: app-db-name
                      name: wally-psql
              image: "${IMAGE_REGISTRY}/${IMAGE_STREAM_NAMESPACE}/${IMAGE_STREAM_NAME}:${IMAGE_STREAM_VERSION}"
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 5432
                timeoutSeconds: 1
              name: postgresql
              ports:
                - containerPort: 5432
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - /usr/bin/env
                    - bash
                    - '-c'
                    - >-
                      psql -q -d
                      $PG_DATABASE -c 'SELECT 1'
                failureThreshold: 5
                initialDelaySeconds: 30
                periodSeconds: 15
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                requests:
                  cpu: ${REQUEST_CPU}
                  memory: ${REQUEST_MEMORY}
                limits:
                  cpu: ${LIMIT_CPU}
                  memory: ${LIMIT_MEMORY}
              securityContext:
                capabilities: {}
                privileged: false
              terminationMessagePath: /dev/termination-log
              volumeMounts:
                - mountPath: /pgdata
                  name: ${DATABASE_SERVICE_NAME}-data
                - mountPath: /var/run/postgresql
                  name: ${DATABASE_SERVICE_NAME}-run
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          volumes:
            - name: ${DATABASE_SERVICE_NAME}-data
              persistentVolumeClaim:
                claimName: ${DATABASE_SERVICE_NAME}
            - name: ${DATABASE_SERVICE_NAME}-run
              emptyDir: {}
      triggers:
        - type: ConfigChange
    status: {}
