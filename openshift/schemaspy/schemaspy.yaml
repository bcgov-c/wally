apiVersion: template.openshift.io/v1
kind: Template
objects:
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: schemaspy
    name: schemaspy
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: schemaspy
      deploymentconfig: schemaspy
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        labels:
          app: schemaspy
          deploymentconfig: schemaspy
      spec:
        containers:
        - args:
            - '--client-id'
            - '$(CLIENT_ID)'
            - '--client-secret'
            - '$(CLIENT_SECRET)'
            - '--redirection-url'
            - 'https://wally-${WALLY_ENV}-schemaspy.apps.silver.devops.gov.bc.ca'
            - '--upstream-url'
            - 'http://localhost:8080'
            - '--discovery-url'
            - '$(DISCOVERY_URL)'
            - '--enable-metrics'
            - '--enable-authorization-cookies=false'
            - '--enable-authorization-header=false'
            - '--listen=:4000'
            - '--resources'
            - 'uri=/*|roles=wally-metrics'
          envFrom:
            - secretRef:
                name: gatekeeper-credentials
          image: >-
            quay.io/keycloak/keycloak-gatekeeper:9.0.0
          imagePullPolicy: Always
          name: grafana-gatekeeper
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
            limits:
              cpu: 50m
              memory: 100Mi
          ports:
          - containerPort: 4000
            protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /oauth/health
              port: 4000
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /oauth/health
              port: 4000
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: DATABASE_HOST
            value: wally-psql-staging
          - name: DATABASE_NAME
            value: wally
          - name: DATABASE_TYPE
            value: pgsql
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                key: app-db-username
                name: wally-psql
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: app-db-password
                name: wally-psql
          - name: SCHEMASPY_ARGUMENTS
            value: -schemas public,hydat,metadata -hq
          image: image-registry.openshift-image-registry.svc:5000/d1b5d2-tools/schemaspy:latest
          imagePullPolicy: Always
          name: schemaspy
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: schemaspy
    name: schemaspy
  spec:
    ports:
    - name: 4000-tcp
      port: 4000
      protocol: TCP
      targetPort: 4000
    selector:
      app: schemaspy
      deploymentconfig: schemaspy
    sessionAffinity: None
    type: ClusterIP
metadata:
  labels:
    app: schemaspy
  name: schemaspy
parameters:
- description: The name of the application for labelling all artifacts.
  displayName: Application Name
  name: NAME
  value: schemaspy
- description: The name of the environment.
  displayName: Environment Name
  name: WALLY_ENV
  value: staging

