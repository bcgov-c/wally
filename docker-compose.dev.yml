version: '3.3'
services:
  backend: 
    build: 
      context: ./backend
      dockerfile: backend.dockerfile
      args: 
        env: dev
    networks: 
      default: 
        aliases: 
          - ${DOMAIN}
    command: /start-reload.sh
    volumes:
      - ./backend/app:/app
    env_file:
      - env-postgres.env
      - env-backend.env
    environment:
      - SERVER_NAME=${DOMAIN}
      - SERVER_HOST=http://${DOMAIN}
    labels:
      - traefik.frontend.rule=PathPrefix:/api,/docs,/redoc
      - traefik.enable=true
      - traefik.port=80
      - traefik.tags=${TRAEFIK_TAG}
    ports:
      - '8888:8888'
    depends_on: 
      - db
  backend-tests:
    build:
      context: ./backend
      dockerfile: tests.dockerfile
    command: bash -c "while true; do sleep 1; done"
    env_file:
      - env-backend.env
      - env-postgres.env
    environment:
      - SERVER_NAME=backend
    volumes:
      - ./backend/app:/app
  proxy:
    image: traefik:v1.7
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --docker \
      --docker.watch \
      --docker.exposedbydefault=false \
      --constraints=tag==${TRAEFIK_TAG} \
      --logLevel=DEBUG \
      --accessLog \
      --web
    labels:
      - traefik.frontend.rule=Host:${DOMAIN}
      - traefik.enable=true
      - traefik.port=80
    ports:
      - '80:80'
      - '8090:8080'
  db:
    image: postgres:11
    env_file:
      - env-postgres.env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata