version: '3.3'
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      args:
        env: dev
    networks:
      default:
        aliases:
          - ${DOMAIN}
    command: /app/start-reload.sh
    volumes:
      - type: bind
        source: ./backend
        target: /app
        consistency: cached
    env_file:
      - env-postgres.env
      - env-backend.env
    environment:
      PORT: 8000
      MAPBOX_ACCESS_TOKEN: "${MAPBOX_ACCESS_TOKEN}"
      MAPBOX_STYLE: "${MAPBOX_STYLE}"
      COMMON_DOCGEN_CLIENT_ID: "${COMMON_DOCGEN_CLIENT_ID}"
      COMMON_DOCGEN_CLIENT_SECRET: "${COMMON_DOCGEN_CLIENT_SECRET}"
      COMMON_DOCGEN_SSO_ENDPOINT: "${COMMON_DOCGEN_SSO_ENDPOINT}"
      COMMON_DOCGEN_ENDPOINT: "${COMMON_DOCGEN_ENDPOINT}"
      MINIO_ACCESS_KEY: "${MINIO_ACCESS_KEY}"
      MINIO_SECRET_KEY: "${MINIO_SECRET_KEY}"
      MINIO_HOST_URL: "${MINIO_HOST_URL}"
    ports:
      - '8000:8000'
    depends_on:
      - db
  db:
    image: crunchydata/crunchy-postgres-gis:centos7-12.5-3.0-4.4.2
    env_file:
      - env-postgres.env
    volumes:
      - pgdata-volume:/pgdata:z
      - type: bind
        source: ./scripts/database/dev/setup.sql
        target: /pgconf/setup.sql
        consistency: cached
    ports:
      - '5432:5432'
  tileserv:
    hostname: tileserv
    depends_on:
      - db
    image: pramsey/pg_tileserv:latest
    environment:
      DATABASE_URL: postgres://ftw_reader:test_pw@db:5432/wally
    ports:
      - "7800:7800"
    entrypoint: sh -c "sleep 10; /app/pg_tileserv"
volumes:
  pgdata-volume:
