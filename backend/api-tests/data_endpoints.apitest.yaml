environment:
  vars:
    host: http://localhost:8000
    auth_token: test
  headers:
    Authorization: Bearer {{auth_token}}
requests:
  - name: Log in
    url: "{{auth_url}}"
    method: post
    contentType: application/x-www-form-urlencoded
    body:
      client_id: "{{auth_id}}"
      client_secret: "{{auth_secret}}"
      grant_type: password
      username: "{{auth_user}}"
      password: "{{auth_pass}}"
    expect:
      status: 200
    set:
      - var: auth_token # set the {{auth_token}} here
        from: access_token
  - name: Get stations
    url: "{{host}}/api/v1/hydat/all"
    method: get
    expect:
      status: 200
      values:
        type: "FeatureCollection" # response should be a FeatureCollection object, which will contain this value.
    set:
      - var: station_id
        from: "features.[0].id" # get first value in list of features
  - name: Get the first station in list
    url: "{{host}}/api/v1/hydat/{{station_id}}"
    method: get
    expect:
      status: 200
      values:
        prov_terr_state_loc: BC
    set:
      - var: first_available_flow_year
        from: "flow_years.[0]"
  - name: Check for 404 when requesting invalid station
    url: "{{host}}/api/v1/hydat/invalid_station"
    method: get
    expect:
      status: 404
  - name: Check for 405 when using wrong method
    url: "{{host}}/api/v1/hydat/invalid_station"
    method: post
    expect:
      status: 405
  - name: Get the flow values from station
    url: "{{host}}/api/v1/hydat/{{station_id}}/flows?year={{first_available_flow_year}}"
    method: get
    expect:
      status: 200
  - name: Check for 404 when requesting data from an invalid station
    url: "{{host}}/api/v1/hydat/invalid_station/flows?year={{first_available_flow_year}}"
    method: get
    expect:
      status: 404
  - name: call excel report endpoint
    url: "{{host}}/api/v1/aggregate/?bbox=-127.25970731511886&bbox=52.15045468386435&bbox=-127.158801334543&bbox=52.28141803274622&width=1286&height=1243&layers=aquifers&format=xlsx"
    method: get
    expect:
      status: 200 # response is an excel file, so just check status code.
  - name: call excel report endpoint with Hydat layer
    url: "{{host}}/api/v1/aggregate/?bbox=-127.25970731511886&bbox=52.15045468386435&bbox=-127.158801334543&bbox=52.28141803274622&width=1286&height=1243&layers=aquifers&layers=hydrometric_stream_flow&format=xlsx"
    method: get
    expect:
      status: 200 # response is an excel file, so just check status code.
  - name: Well radius search
    url: "{{host}}/api/v1/wells/nearby?radius=1000&&point=%5B-122.90700522356728%2C49.31036202688435%5D"
    method: get
    expect:
      status: 200
  - name: Well radius search (invalid radius)
    url: "{{host}}/api/v1/wells/nearby?radius=20000&&point=%5B-122.90700522356728%2C49.31036202688435%5D"
    method: get
    expect:
      status: 422
  - name: Licence radius search
    url: "{{host}}/api/v1/licences/nearby?radius=1000&&point=%5B-122.90700522356728%2C49.31036202688435%5D"
    method: get
    expect:
      status: 200
  - name: First Nations search from point location
    url: '{{host}}/api/v1/firstnations/nearby?geometry={"coordinates":[-122.93164184180638,50.15903067710735],"type":"Point"}'
    method: get
    expect:
      status: 200
      values:
        nearest_communities:
          exists: true # just checks that this is present in the response, whether or not any communities were found
        nearest_treaty_areas:
          exists: true
        nearest_treaty_lands:
          exists: true
  - name: First Nations search from point location
    url: '{{host}}/api/v1/firstnations/nearby?geometry={"type":"Polygon","coordinates":[[[-122.9326263202208,50.1561293198786],[-122.9326263202208,50.1561293198786],[-122.9326263202208,50.1561293198786],[-122.9326263202208,50.1561293198786],[-122.9326263202208,50.1561293198786]]]}'
    method: get
    expect:
      status: 200
      values:
        nearest_communities:
          exists: true
        nearest_treaty_areas:
          exists: true
        nearest_treaty_lands:
          exists: true
  - name: call aggregate endpoint (aquifers)
    url: "{{host}}/api/v1/aggregate/?bbox=-127.25970731511886&bbox=52.15045468386435&bbox=-127.158801334543&bbox=52.28141803274622&width=1286&height=1243&layers=aquifers"
    method: get
    expect:
      status: 200
      values:
        display_data.[0].geojson.type: FeatureCollection
  - name: call aggregate endpoint (automated snow weather station locations)
    url: "{{host}}/api/v1/aggregate/?bbox=-127.25970731511886&bbox=52.15045468386435&bbox=-127.158801334543&bbox=52.28141803274622&width=1286&height=1243&layers=automated_snow_weather_station_locations"
    method: get
    expect:
      status: 200
      values:
        display_data.[0].geojson.type: FeatureCollection
  - name: call aggregate endpoint (groundwater_wells)
    url: "{{host}}/api/v1/aggregate/?polygon=[[[-123.01218163390963,50.098091859577636],[-123.0078944282,50.08021264021647],[-122.97502585109319,50.08800696615489],[-122.97716945394824,50.10244604378991],[-123.01218163390963,50.098091859577636]]]&width=1286&height=1243&layers=groundwater_wells"
    method: get
    expect:
      status: 200
      values:
        display_data.[0].geojson.type: FeatureCollection
  - name: call aggregate endpoint (freshwater_atlas_watersheds)
    url: "{{host}}/api/v1/aggregate/?polygon=[[[-123.32324981689455,48.62428582180531],[-123.3225631713867,48.61940649998342],[-123.3138084411621,48.62099516817615],[-123.32324981689455,48.62428582180531]]]&layers=freshwater_atlas_watersheds"
    method: get
    expect:
      status: 200
      values:
        display_data.[0].geojson.type: FeatureCollection
  - name: call aggregate endpoint (hydrometric_stream_flow)
    url: "{{host}}/api/v1/aggregate/?bbox=-127.25970731511886&bbox=52.15045468386435&bbox=-127.158801334543&bbox=52.28141803274622&width=1286&height=1243&layers=hydrometric_stream_flow"
    method: get
    expect:
      status: 200
      values:
        display_data.[0].geojson.type: FeatureCollection
  - name: call aggregate endpoint (bc_major_watersheds)
    url: "{{host}}/api/v1/aggregate/?polygon=[[[-123.32324981689455,48.62428582180531],[-123.3225631713867,48.61940649998342],[-123.3138084411621,48.62099516817615],[-123.32324981689455,48.62428582180531]]]&width=1286&height=1243&layers=bc_major_watersheds"
    method: get
    expect:
      status: 200
      values:
        display_data.[0].geojson.type: FeatureCollection
  - name: call aggregate endpoint (freshwater_atlas_stream_directions)
    url: "{{host}}/api/v1/aggregate/?polygon=[[[-123.32324981689455,48.62428582180531],[-123.3225631713867,48.61940649998342],[-123.3138084411621,48.62099516817615],[-123.32324981689455,48.62428582180531]]]&layers=freshwater_atlas_stream_directions"
    method: get
    expect:
      status: 200
      values:
        display_data.[0].geojson.type: FeatureCollection
  - name: call aggregate endpoint (freshwater_atlas_stream_networks)
    url: "{{host}}/api/v1/aggregate/?polygon=[[[-123.32324981689455,48.62428582180531],[-123.3225631713867,48.61940649998342],[-123.3138084411621,48.62099516817615],[-123.32324981689455,48.62428582180531]]]&layers=freshwater_atlas_stream_networks"
    method: get
    expect:
      status: 200
      values:
        display_data.[0].geojson.type: FeatureCollection
  - name: call aggregate endpoint (water_allocation_restrictions)
    url: "{{host}}/api/v1/aggregate/?bbox=-127.25970731511886&bbox=52.15045468386435&bbox=-127.158801334543&bbox=52.28141803274622&width=1286&height=1243&layers=water_allocation_restrictions"
    method: get
    expect:
      status: 200
      values:
        display_data.[0].geojson.type: FeatureCollection
  - name: call aggregate endpoint (water_rights_applications)
    url: "{{host}}/api/v1/aggregate/?bbox=-127.25970731511886&bbox=52.15045468386435&bbox=-127.158801334543&bbox=52.28141803274622&width=1286&height=1243&layers=water_rights_applications"
    method: get
    expect:
      status: 200
      values:
        display_data.[0].geojson.type: FeatureCollection
  - name: call aggregate endpoint (water_rights_licences)
    url: "{{host}}/api/v1/aggregate/?bbox=-127.25970731511886&bbox=52.15045468386435&bbox=-127.158801334543&bbox=52.28141803274622&width=1286&height=1243&layers=water_rights_licences"
    method: get
    expect:
      status: 200
      values:
        display_data.[0].geojson.type: FeatureCollection
  - name: call aggregate endpoint (ecocat_water_related_reports)
    url: "{{host}}/api/v1/aggregate/?bbox=-127.25970731511886&bbox=52.15045468386435&bbox=-127.158801334543&bbox=52.28141803274622&width=1286&height=1243&layers=ecocat_water_related_reports"
    method: get
    expect:
      status: 200
      values:
        display_data.[0].geojson.type: FeatureCollection
  - name: call aggregate endpoint (cadastral)
    url: "{{host}}/api/v1/aggregate/?polygon=[[[-123.01218163390963,50.098091859577636],[-123.0078944282,50.08021264021647],[-122.97502585109319,50.08800696615489],[-122.97716945394824,50.10244604378991],[-123.01218163390963,50.098091859577636]]]&layers=cadastral"
    method: get
    expect:
      status: 200
      values:
        display_data.[0].geojson.type: FeatureCollection
  - name: call aggregate endpoint (critical_habitat_species_at_risk)
    url: "{{host}}/api/v1/aggregate/?bbox=-127.25970731511886&bbox=52.15045468386435&bbox=-127.158801334543&bbox=52.28141803274622&width=1286&height=1243&layers=critical_habitat_species_at_risk"
    method: get
    expect:
      status: 200
      values:
        display_data.[0].geojson.type: FeatureCollection
  - name: call aggregate endpoint (bc_wildfire_active_weather_stations)
    url: "{{host}}/api/v1/aggregate/?bbox=-127.25970731511886&bbox=52.15045468386435&bbox=-127.158801334543&bbox=52.28141803274622&width=1286&height=1243&layers=bc_wildfire_active_weather_stations"
    method: get
    expect:
      status: 200
      values:
        display_data.[0].geojson.type: FeatureCollection
  - name: call aggregate endpoint with multiple layers (3 - wildfire, critical habitat, aquifers)
    url: "{{host}}/api/v1/aggregate/?bbox=-127.25970731511886&bbox=52.15045468386435&bbox=-127.158801334543&bbox=52.28141803274622&width=1286&height=1243&layers=bc_wildfire_active_weather_stations&layers=critical_habitat_species_at_risk&layers=aquifers"
    method: get
    expect:
      status: 200
      values:
        display_data.[0].geojson.type: FeatureCollection
  - name: call aggregate endpoint with multiple layers (3 - fn_community_locations, fn_treaty_lands, fn_treaty_areas)
    url: "{{host}}/api/v1/aggregate/?bbox=-127.25970731511886&bbox=52.15045468386435&bbox=-127.158801334543&bbox=52.28141803274622&width=1286&height=1243&layers=fn_treaty_lands&layers=fn_treaty_areas&layers=fn_community_locations"
    method: get
    expect:
      status: 200
      values:
        display_data.[0].geojson.type: FeatureCollection
        display_data.[1].geojson.type: FeatureCollection
        display_data.[2].geojson.type: FeatureCollection
  - name: Cross section endpoint, across Whistler data set
    url: "{{host}}/api/v1/wells/section?radius=200&line=%5B%5B-122.96377711531765%2C50.10780689347729%5D%2C%5B-122.93100834718146%2C50.15894819669609%5D%5D"
    method: get
    expect:
      status: 200
      values:
        search_area.type: Polygon
        wells.[0].well_tag_number:
          exists: true
        wells.[0].distance_from_origin:
          exists: true
        elevation_profile.[0].distance_from_origin: 0 # the first 
        elevation_profile.[0].elevation:
          gt: 500 # all elevations in Whistler should be greater than 500, this is just a sanity check
        surface.[0]:
          exists: true
  - name: Stream buffer data search (water_rights_licences)
    url: "{{host}}/api/v1/stream/features"
    method: post
    body:
      geometry: >-
        [{"type":"LineString","coordinates":[[-123.06616544723511,50.15465853760446],[-123.06788206100464,50.154631040985095],
        [-123.06846141815186,50.15487850999028]]},{"type":"LineString","coordinates":[[-123.06116580963135,50.15432857712821],
        [-123.06616544723511,50.15465853760446]]},{"type":"LineString","coordinates":[[-123.06846141815186,50.15487850999028],
        [-123.06884765625,50.15471353079579],[-123.06981325149536,50.1548097687284],[-123.07067155838013,50.154424815835654],
        [-123.07135820388794,50.15441106746073]]},{"type":"LineString","coordinates":[[-123.07135820388794,50.15441106746073],
        [-123.07150840759277,50.1544660609367],[-123.07168006896973,50.15490600646737],[-123.07247400283813,50.15535969605608],
        [-123.07292461395264,50.155785885384546],[-123.07341814041138,50.15667949583636],[-123.07350397109985,50.159373973932674],
        [-123.07369709014893,50.159690152733106],[-123.07376146316528,50.160487463900694],[-123.07371854782104,50.16067991632815],
        [-123.0732250213623,50.161229776137304],[-123.07324647903442,50.161449718290044],[-123.07425498962402,50.162356968973256],
        [-123.07464122772217,50.163167981522605],[-123.07459831237793,50.16338791475741],[-123.07404041290283,50.163690321302994],
        [-123.0737829208374,50.164006471554984],[-123.0736756324768,50.164762474548155],[-123.07382583618164,50.16505112708202],
        [-123.07307481765747,50.16601328960499],[-123.07292461395264,50.1666318124274],[-123.072988986969,50.167126624922076],
        [-123.07245254516602,50.16740151853884],[-123.0717658996582,50.1679787899875],[-123.07165861129761,50.168349889379556],
        [-123.07137966156006,50.168487332867585],[-123.07080030441284,50.16861103166883],[-123.07028532028198,50.16854231015208],
        [-123.06876182556152,50.168858428310784],[-123.0683970451355,50.16878970714981],[-123.06796789169312,50.168858428310784],
        [-123.06646585464478,50.16932572958467],[-123.06584358215332,50.1693807059047],[-123.06500673294067,50.169614354559315],
        [-123.06406259536743,50.1695318904587]]},{"type":"LineString","coordinates":[[-123.04455757141113,50.155029740418485],
        [-123.04477214813232,50.155112229541345],[-123.04550170898438,50.15468603420803],[-123.04595232009888,50.154548551032036],
        [-123.04659605026245,50.15465853760446],[-123.04764747619629,50.15439731908185],[-123.04874181747437,50.15435607392155],
        [-123.04917097091675,50.15420484136257],[-123.04972887039185,50.15423233822705],[-123.05056571960449,50.153971117376074],
        [-123.05133819580078,50.154053608325285],[-123.05183172225952,50.15388862628453],[-123.0527114868164,50.15314620005648],
        [-123.05318355560303,50.15292621970107],[-123.05532932281494,50.15247250702188],[-123.05608034133911,50.15248625595419],
        [-123.05670261383057,50.152719987198765],[-123.05788278579712,50.15284372680688],[-123.05914878845215,50.15372364367451],
        [-123.05949211120605,50.15386112922238],[-123.0598783493042,50.15432857712821],[-123.06052207946777,50.15439731908185],
        [-123.06116580963135,50.15432857712821]]},{"type":"LineString","coordinates":[[-123.04275512695312,50.15441106746073],
        [-123.04344177246094,50.15456229936743],[-123.04387092590332,50.15445231257365],[-123.04455757141113,50.155029740418485]]}]
      buffer: 50
      layer: water_rights_licences
    expect:
      status: 200
  - name: Watersheds available at point
    url: "{{host}}/api/v1/watersheds/?point=%5B-122.99920612772564%2C50.09566411230176%5D"
    method: get
    expect:
      status: 200
  - name: Watershed licences
    url: "{{host}}/api/v1/watersheds/WHSE_BASEMAPPING.FWA_ASSESSMENT_WATERSHEDS_POLY.15091/licences"
    method: get
    expect:
      status: 200
  - name: Watershed details
    url: "{{host}}/api/v1/watersheds/WHSE_BASEMAPPING.FWA_ASSESSMENT_WATERSHEDS_POLY.15091"
    method: get
    expect:
      status: 200
