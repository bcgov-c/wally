"""pg_fasstr functions

Revision ID: bc8bc4bb72cb
Revises: 702efdc8f3fa
Create Date: 2021-05-19 12:49:30.018297

"""
import os
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bc8bc4bb72cb'
down_revision = '702efdc8f3fa'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('longterm_stats',
                    sa.Column('month', sa.Text(), nullable=False),
                    sa.Column('mean', sa.Numeric(), nullable=True),
                    sa.Column('median', sa.Numeric(), nullable=True),
                    sa.Column('maximum', sa.Numeric(), nullable=True),
                    sa.Column('minimum', sa.Numeric(), nullable=True),
                    sa.Column('p10', sa.Numeric(), nullable=True),
                    sa.Column('p90', sa.Numeric(), nullable=True),
                    sa.PrimaryKeyConstraint('month'),
                    schema='hydat'
                    )
    op.create_table('fasstr_flows',
                    sa.Column('fasstr_flows_id', sa.Integer(), primary_key=True, nullable=False),
                    sa.Column('station_number', sa.Text(), nullable=False, index=True),
                    sa.Column('date', sa.Date(), nullable=False),
                    sa.Column('value', sa.Numeric(), nullable=True),
                    sa.ForeignKeyConstraint(['station_number'], ['hydat.stations.station_number'], ),
                    sa.PrimaryKeyConstraint('fasstr_flows_id'),
                    schema='hydat'
                    )

    dirname = os.path.dirname(__file__)
    filename = os.path.join(dirname, 'sql/20210519124930_fasstr_functions.sql')
    with open(filename, "r") as r:
        fasstr_funcs = r.read()
    op.execute(fasstr_funcs)


def downgrade():

    op.execute("""
        drop function if exists hydat.r_fasstr_calc_annual_lowflows;
        drop function if exists hydat.fasstr_calc_annual_lowflows(date[], numeric[], boolean);
        drop function if exists hydat.fasstr_calc_annual_lowflows(text, boolean);

        drop function if exists hydat.fasstr_calc_longterm_daily_stats(date[], numeric[], boolean, boolean);
        drop function if exists hydat.fasstr_calc_longterm_daily_stats(text, boolean, boolean);

        drop function if exists hydat.fasstr_compute_frequency_quantile(date[], numeric[], integer, integer, boolean, boolean);
        drop function if exists hydat.fasstr_compute_frequency_quantile(text, integer, integer, boolean, boolean);
    """)
    op.drop_table('fasstr_flows', schema='hydat')
    op.drop_table('longterm_stats', schema='hydat')

    # ### end Alembic commands ###
