"""add layer categories

Revision ID: eca0ac552803
Revises: 96815a5f7752
Create Date: 2019-10-03 18:14:44.796826

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'eca0ac552803'
down_revision = '96815a5f7752'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('SET search_path TO metadata')

    op.create_table('layer_category',
                    sa.Column('create_user', sa.String(length=100), nullable=True,
                              comment='The user who created this record in the database.'),
                    sa.Column('create_date', sa.DateTime(
                    ), nullable=True, comment='Date and time (UTC) when the physical record was created in the database.'),
                    sa.Column('update_user', sa.String(length=100), nullable=True,
                              comment='The user who last updated this record in the database.'),
                    sa.Column('update_date', sa.DateTime(), nullable=True,
                              comment='Date and time (UTC) when the physical record was updated in the database. It will be the same as the create_date until the record is first updated after creation.'),
                    sa.Column('effective_date', sa.DateTime(), nullable=True,
                              comment='The date and time that the code became valid and could be used.'),
                    sa.Column('expiry_date', sa.DateTime(), nullable=True,
                              comment='The date and time after which the code is no longer valid and should not be used.'),
                    sa.Column('layer_category_code',
                              sa.String(), nullable=False),
                    sa.Column('description',
                              sa.String(length=255), nullable=False),
                    sa.PrimaryKeyConstraint('layer_category_code'),
                    schema='metadata'
                    )

    op.add_column('display_catalogue',
                  sa.Column('layer_category_code', sa.String(), sa.ForeignKey('metadata.layer_category.layer_category_code'), nullable=True, comment='references a layer category'))

    # add starting codes into code table
    op.execute("""
        INSERT INTO layer_category (layer_category_code, description) VALUES
        ('LAND_TENURE', 'Land Tenure and Administrative Boundaries'),
        ('FISH_WILDLIFE_PLANTS', 'Fish, Wildlife, and Plant Species'),
        ('FRESHWATER_MARINE', 'Freshwater and Marine'),
        ('WATER_ADMINISTRATION','Water Administration'),
        ('REPORTS', 'Reports'),
        ('WEATHER', 'Weather and Precipitation') 
    """)

    # one time command to populate the new column.
    # these categories are from https://apps.nrs.gov.bc.ca/int/jira/browse/WATER-417
    # if we need to modify/add columns regularly, we will need to build an admin page
    # for managing layers.
    op.execute("""
        UPDATE display_catalogue AS dc
        SET layer_category_code = CASE
            WHEN dc.display_data_name = 'water_rights_licences' THEN 'WATER_ADMINISTRATION'
            WHEN dc.display_data_name = 'groundwater_wells' THEN 'FRESHWATER_MARINE'
            WHEN dc.display_data_name = 'freshwater_atlas_watersheds' THEN 'FRESHWATER_MARINE'
            WHEN dc.display_data_name = 'bc_major_watersheds' THEN 'FRESHWATER_MARINE'
            WHEN dc.display_data_name = 'cadastral' THEN 'LAND_TENURE'
            WHEN dc.display_data_name = 'automated_snow_weather_station_locations' THEN 'WEATHER'
            WHEN dc.display_data_name = 'freshwater_atlas_stream_directions' THEN 'FRESHWATER_MARINE'
            WHEN dc.display_data_name = 'bc_wildfire_active_weather_stations' THEN 'WEATHER'
            WHEN dc.display_data_name = 'ecocat_water_related_reports' THEN 'REPORTS'
            WHEN dc.display_data_name = 'aquifers' THEN 'FRESHWATER_MARINE'
            WHEN dc.display_data_name = 'water_allocation_restrictions' THEN 'FRESHWATER_MARINE'
            WHEN dc.display_data_name = 'critical_habitat_species_at_risk' THEN 'FISH_WILDLIFE_PLANTS'
            WHEN dc.display_data_name = 'hydrometric_stream_flow' THEN 'FRESHWATER_MARINE'
            ELSE NULL
            END
        WHERE layer_category_code IS NULL
    """)

    op.execute('SET search_path TO public')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # ### end Alembic commands ###
    return
