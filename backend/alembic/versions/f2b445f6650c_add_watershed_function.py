"""add watershed function

Revision ID: f2b445f6650c
Revises: 6eccf085d7c7
Create Date: 2020-02-08 00:06:44.544948

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f2b445f6650c'
down_revision = '6eccf085d7c7'
branch_labels = None
depends_on = None


def upgrade():

    # create tile boundary function
    op.execute("""
    CREATE OR REPLACE
    FUNCTION ST_TileEnvelope(z integer, x integer, y integer)
    RETURNS geometry
    AS $$
    DECLARE
        size float8;
        zp integer = pow(2, z);
        gx float8;
        gy float8;
    BEGIN
        IF y >= zp OR y < 0 OR x >= zp OR x < 0 THEN
            RAISE EXCEPTION 'invalid tile coordinate (%, %, %)', z, x, y;
        END IF;
        size := 40075016.6855784 / zp;
        gx := (size * x) - (40075016.6855784/2);
        gy := (40075016.6855784/2) - (size * y);
        RETURN ST_SetSRID(ST_MakeEnvelope(gx, gy, gx + size, gy - size), 3857);
    END;
    $$
    LANGUAGE 'plpgsql'
    IMMUTABLE
    STRICT
    PARALLEL SAFE;
    """)

    op.execute("""
    CREATE OR REPLACE
    FUNCTION public.calculate_local_watershed(search_point text default 'POINT (-123 51)')
    RETURNS TABLE(
        geom Geometry(Polygon, 4326),
        area float
    )
    AS $$
        SELECT
            "GEOMETRY" as geom,
            "FEATURE_AREA_SQM" as area
        FROM    freshwater_atlas_watersheds
        WHERE   "FWA_WATERSHED_CODE" ilike (
            SELECT  left(regexp_replace("FWA_WATERSHED_CODE", '000000', '%'), strpos(regexp_replace("FWA_WATERSHED_CODE", '000000', '%'), '%')) as fwa_local_code
            FROM    freshwater_atlas_watersheds fwa2
            WHERE   ST_Contains(
                "GEOMETRY",
                ST_SetSRID(ST_GeomFromText(search_point), 4326)
            )
        )
        AND split_part("LOCAL_WATERSHED_CODE", '-', (
            SELECT FLOOR(((strpos(regexp_replace("LOCAL_WATERSHED_CODE", '000000', '%'), '%')) - 4) / 7) + 1
            FROM freshwater_atlas_watersheds
            WHERE   ST_Contains(
                "GEOMETRY",
                ST_SetSRID(ST_GeomFromText(search_point), 4326)
            ))::int
        )::int >= split_part((
            SELECT "LOCAL_WATERSHED_CODE"
            FROM freshwater_atlas_watersheds
            WHERE   ST_Contains(
                "GEOMETRY",
                ST_SetSRID(ST_GeomFromText(search_point), 4326)
            )
        ), '-', (
            SELECT FLOOR(((strpos(regexp_replace("LOCAL_WATERSHED_CODE", '000000', '%'), '%')) - 4) / 7) + 1
            FROM freshwater_atlas_watersheds
            WHERE   ST_Contains(
                "GEOMETRY",
                ST_SetSRID(ST_GeomFromText(search_point), 4326)
            ))::int
        )::int
    $$
    LANGUAGE 'sql'
    STABLE
    ;
    """)

    op.execute("""
    CREATE OR REPLACE
    FUNCTION public.local_watershed(
                z integer, x integer, y integer,
                search_point text default 'POINT (-123 51)')
    RETURNS bytea
    AS $$
        WITH
        bounds AS (
        SELECT ST_TileEnvelope(z, x, y) AS geom
        ),
        mvtgeom AS (
        SELECT ST_AsMVTGeom(ST_Transform(t.geom, 3857), bounds.geom) AS geom, area
        FROM calculate_local_watershed(search_point) t, bounds
        WHERE ST_Intersects(t.geom, ST_Transform(bounds.geom, 4326))
        )
        SELECT ST_AsMVT(mvtgeom, 'public.local_watershed') FROM mvtgeom;
    $$
    LANGUAGE 'sql'
    VOLATILE
    PARALLEL SAFE;
    """)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # ### end Alembic commands ###
    return
